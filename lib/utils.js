// Generated by CoffeeScript 1.10.0
(function() {
  "use strict";

  /**
   * @author Harminder Virk
   * @since v1.1.2
   * @description Util methods, to follow DRY approach
   */
  var _;

  _ = require("lodash");

  module.exports = {

    /**
     * Converting an object recursively to dot notation
     * @param  {Object} data                 Object to loop over
     * @param  {Object} resultsBuiltOverTime Single leaf object to return
     * @param  {String} key                  dot notatation key build over time
     * @return {Object}                      Single leaf object to return
     */
    convert_object_to_dot_notation: function(compareWith, data, resultsBuiltOverTime, key) {
      var cloneIndex, index, item;
      if (resultsBuiltOverTime == null) {
        resultsBuiltOverTime = {};
      }
      for (index in data) {
        item = data[index];
        cloneIndex = index;
        if (key) {
          index = key + "." + index;
        }
        if (typeof compareWith === 'undefined') {
          return resultsBuiltOverTime[index] = item;
        }
        if (_.isArray(compareWith[cloneIndex]) && typeof compareWith[cloneIndex][0] === 'string') {
          compareWith[cloneIndex] = compareWith[cloneIndex][0];
        }
        if (typeof item === 'object' && typeof compareWith[cloneIndex] !== 'string') {
          this.convert_object_to_dot_notation(compareWith[cloneIndex], item, resultsBuiltOverTime, index);
        } else {
          resultsBuiltOverTime[index] = item;
        }
      }
      return resultsBuiltOverTime;
    }
  };

}).call(this);
